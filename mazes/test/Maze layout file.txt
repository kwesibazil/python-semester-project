[['wall', 'wall', 'wall', 'wall', 'wall', 'wall', 'wall', 'wall'], ['wall', 'clear', 'clear', 'clear', 'clear', 'clear', 'clear', 'wall'], ['wall', 'wall', 'wall', 'wall', 'clear', 'wall', 'wall', 'wall'], ['wall', 'start', 'clear', 'wall', 'clear', 'clear', 'wall', 'wall'], ['wall', 'clear', 'wall', 'wall', 'wall', 'clear', 'clear', 'wall'], ['wall', 'clear', 'clear', 'wall', 'wall', 'wall', 'clear', 'wall'], ['wall', 'wall', 'clear', 'clear', 'clear', 'clear', 'clear', 'wall'], ['wall', 'wall', 'wall', 'wall', 'wall', 'wall', 'wall', 'wall']]
[['wall', 'wall', 'wall', 'wall', 'wall', 'wall', 'wall', 'wall'], ['start', 'clear', 'clear', 'wall', 'clear', 'wall', 'clear', 'wall'], ['wall', 'wall', 'clear', 'clear', 'clear', 'wall', 'clear', 'wall'], ['wall', 'wall', 'wall', 'wall', 'clear', 'clear', 'clear', 'wall'], ['wall', 'clear', 'wall', 'wall', 'wall', 'clear', 'wall', 'wall'], ['wall', 'clear', 'clear', 'wall', 'clear', 'clear', 'clear', 'wall'], ['wall', 'wall', 'clear', 'clear', 'clear', 'wall', 'clear', 'wall'], ['wall', 'wall', 'wall', 'wall', 'wall', 'wall', 'wall', 'wall']]
[['wall', 'wall', 'wall', 'wall', 'wall', 'wall', 'wall', 'wall'], ['wall', 'clear', 'wall', 'wall', 'clear', 'clear', 'clear', 'wall'], ['wall', 'clear', 'start', 'wall', 'wall', 'wall', 'clear', 'wall'], ['wall', 'wall', 'clear', 'clear', 'clear', 'clear', 'clear', 'wall'], ['wall', 'wall', 'wall', 'wall', 'wall', 'wall', 'clear', 'wall'], ['wall', 'clear', 'wall', 'clear', 'clear', 'clear', 'clear', 'wall'], ['wall', 'clear', 'clear', 'clear', 'wall', 'clear', 'wall', 'wall'], ['wall', 'wall', 'wall', 'wall', 'wall', 'wall', 'wall', 'wall']]
[['wall', 'wall', 'wall', 'wall', 'wall', 'wall', 'wall', 'wall'], ['wall', 'clear', 'clear', 'clear', 'wall', 'wall', 'clear', 'wall'], ['wall', 'clear', 'wall', 'clear', 'clear', 'clear', 'clear', 'wall'], ['wall', 'clear', 'wall', 'wall', 'clear', 'wall', 'wall', 'wall'], ['wall', 'clear', 'wall', 'clear', 'clear', 'clear', 'clear', 'wall'], ['wall', 'wall', 'wall', 'clear', 'wall', 'wall', 'clear', 'wall'], ['start', 'clear', 'clear', 'clear', 'wall', 'clear', 'clear', 'wall'], ['wall', 'wall', 'wall', 'wall', 'wall', 'wall', 'wall', 'wall']]
[['wall', 'wall', 'wall', 'wall', 'wall', 'wall', 'wall', 'wall'], ['wall', 'clear', 'clear', 'clear', 'clear', 'clear', 'wall', 'wall'], ['wall', 'wall', 'wall', 'clear', 'wall', 'clear', 'clear', 'wall'], ['start', 'clear', 'wall', 'clear', 'wall', 'wall', 'clear', 'wall'], ['wall', 'clear', 'clear', 'clear', 'wall', 'clear', 'clear', 'wall'], ['wall', 'wall', 'wall', 'wall', 'wall', 'clear', 'wall', 'wall'], ['wall', 'clear', 'clear', 'clear', 'clear', 'clear', 'clear', 'wall'], ['wall', 'wall', 'wall', 'wall', 'wall', 'wall', 'wall', 'wall']]
[['wall', 'start', 'wall', 'wall', 'wall', 'wall', 'wall', 'wall'], ['wall', 'clear', 'wall', 'wall', 'clear', 'clear', 'clear', 'wall'], ['wall', 'clear', 'clear', 'wall', 'wall', 'wall', 'clear', 'wall'], ['wall', 'wall', 'clear', 'clear', 'clear', 'wall', 'clear', 'wall'], ['wall', 'wall', 'wall', 'wall', 'clear', 'wall', 'clear', 'wall'], ['wall', 'clear', 'wall', 'wall', 'clear', 'wall', 'clear', 'wall'], ['wall', 'clear', 'clear', 'clear', 'clear', 'clear', 'clear', 'wall'], ['wall', 'wall', 'wall', 'wall', 'wall', 'wall', 'wall', 'wall']]
[['wall', 'wall', 'wall', 'wall', 'wall', 'wall', 'wall', 'wall'], ['wall', 'clear', 'clear', 'clear', 'clear', 'clear', 'clear', 'wall'], ['wall', 'clear', 'wall', 'wall', 'wall', 'wall', 'clear', 'wall'], ['wall', 'clear', 'wall', 'clear', 'clear', 'wall', 'clear', 'start'], ['wall', 'clear', 'wall', 'wall', 'clear', 'wall', 'wall', 'wall'], ['wall', 'clear', 'wall', 'clear', 'clear', 'clear', 'clear', 'wall'], ['wall', 'clear', 'clear', 'clear', 'wall', 'wall', 'clear', 'wall'], ['wall', 'wall', 'wall', 'wall', 'wall', 'wall', 'wall', 'wall']]
[['wall', 'wall', 'wall', 'wall', 'wall', 'wall', 'wall', 'wall'], ['wall', 'wall', 'clear', 'clear', 'clear', 'clear', 'clear', 'wall'], ['wall', 'clear', 'clear', 'wall', 'wall', 'clear', 'wall', 'wall'], ['wall', 'clear', 'wall', 'wall', 'wall', 'clear', 'clear', 'wall'], ['wall', 'clear', 'clear', 'clear', 'wall', 'wall', 'clear', 'wall'], ['wall', 'clear', 'wall', 'wall', 'wall', 'clear', 'clear', 'wall'], ['wall', 'clear', 'clear', 'wall', 'clear', 'clear', 'wall', 'wall'], ['wall', 'wall', 'wall', 'wall', 'start', 'wall', 'wall', 'wall']]
[['wall', 'wall', 'wall', 'wall', 'wall', 'wall', 'wall', 'wall'], ['wall', 'clear', 'clear', 'clear', 'clear', 'clear', 'clear', 'wall'], ['wall', 'clear', 'wall', 'wall', 'wall', 'wall', 'clear', 'wall'], ['wall', 'clear', 'clear', 'clear', 'clear', 'wall', 'start', 'wall'], ['wall', 'wall', 'wall', 'clear', 'wall', 'wall', 'wall', 'wall'], ['wall', 'clear', 'wall', 'clear', 'wall', 'clear', 'clear', 'wall'], ['wall', 'clear', 'clear', 'clear', 'clear', 'clear', 'wall', 'wall'], ['wall', 'wall', 'wall', 'wall', 'wall', 'wall', 'wall', 'wall']]








            json.dump({'idx': particle.idx, 't': particle.t }, fp)


mazeObj ={
            "start_Pos": maze.start_Pos,
            "goal_Pos": maze.goal_Pos,
            "goal_Pos_2": maze.goal_Pos_2,
            "layout": maze.layout
  }

print(type(mazeObj))
#print(mazeObj)
print(json.dumps(mazeObj))






with open('path_to_file/person.json') as f:

with open('particle1.json', 'w') as fp:
  json.dump({'idx': particle.idx, 't': particle.t }, fp)



x = {
  "name": "John",
  "age": 30,
  "married": True,
  "divorced": False,
  "children": ("Ann","Billy"),
  "pets": None,
  "cars": [
    {"model": "BMW 230", "mpg": 27.5},
    {"model": "Ford Edge", "mpg": 24.1}
  ]
}




 self.grid = grid
        self.layout = []   
        self.position = []
        self.start_Pos = []   
        self.goal_Pos = [] 
        #self.goal_Pos2 = []
        self.cell_size = 10
        self.window_width = 600
        self.window_height = 720
        self.goal_colour = "red"
        self.wall_colour = "blue"
        self.background = "grey"
        self.start_colour = "yellow"
        self.passage_colour = "white"
        self.speed = 0.01
        self.canvas = [] 
        self.window = window




particle = Particle()
with open('particle1.json', 'r') as fp:
  particle_properties = json.load(fp)
  particle.idx = particle_properties['idx']
  particle.t = particle_properties['t']

